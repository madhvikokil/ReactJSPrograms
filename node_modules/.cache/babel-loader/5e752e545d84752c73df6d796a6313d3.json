{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/ReactJS/react-demo/src/Day4/Day4.js\";\n// Section 4\n// Rendering Content Conditionally\n//Handling Dynamic Conditionally \"The JavaScript Way\"\n//Outputting List\n//List and state\n// Lists and key\nimport React, { Component } from 'react';\nimport Person from '../Person';\n\nclass Day4 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      person: [{\n        id: '123edf',\n        name: \"madhvi kokil\",\n        age: 10\n      }, {\n        id: 'poi890',\n        name: \"vaishnavi jawanjal\",\n        age: 11\n      }, {\n        id: 'po4ftg ',\n        name: \"bhagyashree porwal\",\n        age: 11\n      }, {\n        id: 'seft65',\n        name: \"sonal lamkane\",\n        age: 10\n      }],\n      // new key added\n      showPerson: false // for lists and state\n      // switchData =(newData) =>{\n      //   this.setState({\n      //     person :[\n      //       {name : \"madhvi\",age : 22},\n      //       {name : \"vaishnavi\",age : 21},\n      //       {name : 'bhagyashree',age : 21},\n      //       {name : \"sonal\",age : 21},\n      //     ]\n      //   })\n      // }\n\n    };\n\n    this.deletePersonHandler = personIndex => {\n      const person = this.state.person; // mutable way\n      // const person = [...this.state.person];            immutale way\n\n      person.splice(personIndex, 1);\n      this.setState({\n        person: person\n      });\n    };\n\n    this.nameChangeHandler = (event, id) => {\n      this.setState({\n        person: [{\n          name: event.target.value,\n          age: 28\n        }, {\n          name: 'vaishnavi',\n          age: 21\n        }, {\n          name: 'bhagyashree',\n          age: 21\n        }, {\n          name: \"sonal\",\n          age: 21\n        }]\n      });\n    };\n\n    this.togglePersonHandler = () => {\n      const doesShow = this.state.showPerson;\n      this.setState({\n        showPerson: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'green',\n      font: 'inherit',\n      border: ' 2px solid blue'\n    }; // Rendering Content Conditionally\n    // return (\n    //    <div className=\"Day4\">\n    //      <h1> React JS</h1>\n    //      <button \n    //         style = {style}\n    //      onClick={this.togglePersonHandler}>Toggle</button>\n    //     {/* ternary operator is used to check whether the showPerson is true or false and according to that it will work and onClick it calls the togglePersonHandler*/}\n    //     { this.state.showPerson ? \n    //     <div>\n    //      <Person name={this.state.person[0].name} age={this.state.person[0].age} changed={this.nameChangeHandler}> </Person>\n    //      <Person name={this.state.person[1].name} age={this.state.person[1].age} click={this.switchData.bind(this,\"bhagyaa\")}>  </Person> \n    //      <Person name={this.state.person[2].name} age={this.state.person[2].age} >Hello guys!!! </Person>\n    //      <Person name={this.state.person[3].name} age={this.state.person[3].age}> </Person>\n    //      </div> : null \n    //      }\n    //    </div>\n    // )}\n    // Handling Dynamic Content \"The JavaScript Way\"\n\n    let person;\n\n    if (this.state.showPerson) {\n      console.log(this.state.showPerson); // another method to list down elements\n\n      person = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.person.map((per, index) => {\n        return React.createElement(Person, {\n          click: () => this.deletePersonHandler(index),\n          name: per.name,\n          age: per.age,\n          key: per.id,\n          changes: event => this.nameChangeHandler(event, per.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        });\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"Day4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \" React JS\"), React.createElement(\"button\", {\n      style: style,\n      onClick: this.togglePersonHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Toggle\"), person);\n  }\n\n}\n\nexport default Day4;","map":{"version":3,"sources":["/home/madhavi/Documents/ReactJS/react-demo/src/Day4/Day4.js"],"names":["React","Component","Person","Day4","state","person","id","name","age","showPerson","deletePersonHandler","personIndex","splice","setState","nameChangeHandler","event","target","value","togglePersonHandler","doesShow","render","style","backgroundColor","font","border","console","log","map","per","index"],"mappings":"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","sourcesContent":["// Section 4\n// Rendering Content Conditionally\n//Handling Dynamic Conditionally \"The JavaScript Way\"\n//Outputting List\n//List and state\n// Lists and key\n\nimport React ,{Component} from 'react'\nimport Person from '../Person';\n\n\nclass Day4 extends React.Component {\n\n\n\n    state = {\n      person :[\n        {id : '123edf', name : \"madhvi kokil\",age : 10},\n        {id : 'poi890', name : \"vaishnavi jawanjal\",age : 11},\n        {id : 'po4ftg ',name : \"bhagyashree porwal\",age : 11},\n        {id : 'seft65',name : \"sonal lamkane\",age : 10},\n      ],\n      // new key added\n      showPerson : false\n    }\n\n    // for lists and state\n\n    // switchData =(newData) =>{\n    //   this.setState({\n    //     person :[\n    //       {name : \"madhvi\",age : 22},\n    //       {name : \"vaishnavi\",age : 21},\n    //       {name : 'bhagyashree',age : 21},\n    //       {name : \"sonal\",age : 21},\n\n    //     ]\n    //   })\n    // }\n\n    deletePersonHandler =(personIndex) => {\n        const person = this.state.person;       // mutable way\n       // const person = [...this.state.person];            immutale way\n        person.splice(personIndex,1);\n        this.setState({person :person})\n    }\n\n    nameChangeHandler = (event,id) =>{\n        this.setState({\n            person :[\n                {name : event.target.value,age:28},\n                {name : 'vaishnavi' ,age:21},\n                {name : 'bhagyashree',age : 21},\n                {name : \"sonal\",age : 21},\n      \n            ]\n        })\n    }\n\n    togglePersonHandler =() =>{\n        const doesShow = this.state.showPerson;\n        this.setState({showPerson: !doesShow});\n    }\n\n  render(){\n\n    const style ={\n        backgroundColor: 'green',\n        font : 'inherit',\n        border: ' 2px solid blue',\n     \n    };\n\n    // Rendering Content Conditionally\n\n    // return (\n    //    <div className=\"Day4\">\n    //      <h1> React JS</h1>\n         \n    //      <button \n    //         style = {style}\n    //      onClick={this.togglePersonHandler}>Toggle</button>\n    //     {/* ternary operator is used to check whether the showPerson is true or false and according to that it will work and onClick it calls the togglePersonHandler*/}\n    //     { this.state.showPerson ? \n    //     <div>\n    //      <Person name={this.state.person[0].name} age={this.state.person[0].age} changed={this.nameChangeHandler}> </Person>\n    //      <Person name={this.state.person[1].name} age={this.state.person[1].age} click={this.switchData.bind(this,\"bhagyaa\")}>  </Person> \n    //      <Person name={this.state.person[2].name} age={this.state.person[2].age} >Hello guys!!! </Person>\n    //      <Person name={this.state.person[3].name} age={this.state.person[3].age}> </Person>\n    //      </div> : null \n    //      }\n         \n    //    </div>\n    // )}\n\n\n    // Handling Dynamic Content \"The JavaScript Way\"\n\n    let person ;\n\n    if(this.state.showPerson ) {\n        console.log(this.state.showPerson)\n        // another method to list down elements\n        person = (\n            <div>\n                {this.state.person.map((per,index) => {\n                    return <Person\n                    click ={() => this.deletePersonHandler(index)}\n                    name = {per.name}\n                    age = {per.age} \n                    key = {per.id}\n                    changes ={(event) =>this.nameChangeHandler(event,per.id)}/>\n                })}\n\n         {/* <Person name={this.state.person[0].name} age={this.state.person[0].age} changed={this.nameChangeHandler}> </Person>\n         <Person name={this.state.person[1].name} age={this.state.person[1].age} click={this.switchData.bind(this,\"bhagyaa\")}>  </Person> \n         <Person name={this.state.person[2].name} age={this.state.person[2].age} >Hello guys!!! </Person>\n         <Person name={this.state.person[3].name} age={this.state.person[3].age}> </Person> */}\n            </div>\n\n        );\n    }\n\n      return (\n       <div className=\"Day4\">\n         <h1> React JS</h1>\n         \n         <button \n            style = {style}\n         onClick={this.togglePersonHandler}>Toggle</button>\n        {/* ternary operator is used to check whether the showPerson is true or false and according to that it will work and onClick it calls the togglePersonHandler*/}\n       {person}\n       \n       \n       </div>\n    )}\n}\n  \nexport default Day4;"]},"metadata":{},"sourceType":"module"}