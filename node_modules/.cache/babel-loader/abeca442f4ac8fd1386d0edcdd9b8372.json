{"ast":null,"code":"import _defineProperty from \"/home/madhavi/Documents/ReactJS/react-demo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/madhavi/Documents/ReactJS/react-demo/src/Day5/Day5.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Section 5\n// Setting Styles Dynamically Line no.123\n// Setting ClassName Dynamically \nimport React, { Component } from 'react';\nimport Person from '../Person';\nimport '../App.css';\nimport Radium from 'radium';\n\nclass Day5 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      person: [{\n        id: '123edf',\n        name: \"madhvi kokil\",\n        age: 10\n      }, {\n        id: 'poi890',\n        name: \"vaishnavi jawanjal\",\n        age: 11\n      }, {\n        id: 'po4ftg ',\n        name: \"bhagyashree porwal\",\n        age: 11\n      }, {\n        id: 'seft65',\n        name: \"sonal lamkane\",\n        age: 10\n      }],\n      // new key added\n      showPerson: false // for lists and state\n      // switchData =(newData) =>{\n      //   this.setState({\n      //     person :[\n      //       {name : \"madhvi\",age : 22},\n      //       {name : \"vaishnavi\",age : 21},\n      //       {name : 'bhagyashree',age : 21},\n      //       {name : \"sonal\",age : 21},\n      //     ]\n      //   })\n      // }\n\n    };\n\n    this.deletePersonHandler = personIndex => {\n      const person = this.state.person; // mutable way\n      // const person = [...this.state.person];            immutable way\n\n      person.splice(personIndex, 1);\n      this.setState({\n        person: person\n      });\n    };\n\n    this.nameChangeHandler = (event, id) => {\n      const personIndex = this.state.person.findIndex(p => {\n        return p.id === id;\n      });\n\n      const person = _objectSpread({}, this.state.persond[personIndex]);\n\n      person.name = event.target.value;\n      const persons = [...this.state.person];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonHandler = () => {\n      const doesShow = this.state.showPerson;\n      this.setState({\n        showPerson: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'green',\n      font: 'inherit',\n      border: ' 2px solid blue',\n      ':hover': {\n        backgroundColor: 'lightgreen',\n        color: 'yellow'\n      }\n    }; // Rendering Content Conditionally\n    // return (\n    //    <div className=\"Day4\">\n    //      <h1> React JS</h1>\n    //      <button \n    //         style = {style}\n    //      onClick={this.togglePersonHandler}>Toggle</button>\n    //     {/* ternary operator is used to check whether the showPerson is true or false and according to that it will work and onClick it calls the togglePersonHandler*/}\n    //     { this.state.showPerson ? \n    //     <div>\n    //      <Person name={this.state.person[0].name} age={this.state.person[0].age} changed={this.nameChangeHandler}> </Person>\n    //      <Person name={this.state.person[1].name} age={this.state.person[1].age} click={this.switchData.bind(this,\"bhagyaa\")}>  </Person> \n    //      <Person name={this.state.person[2].name} age={this.state.person[2].age} >Hello guys!!! </Person>\n    //      <Person name={this.state.person[3].name} age={this.state.person[3].age}> </Person>\n    //      </div> : null \n    //      }\n    //    </div>\n    // )}\n    // Handling Dynamic Content \"The JavaScript Way\"\n\n    let person;\n\n    if (this.state.showPerson) {\n      console.log(this.state.showPerson); // another method to list down elements\n\n      person = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, this.state.person.map((per, index) => {\n        return React.createElement(Person, {\n          click: () => this.deletePersonHandler(index),\n          name: per.name,\n          age: per.age,\n          key: per.id,\n          changes: event => this.nameChangeHandler(event, per.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        });\n      }));\n      style.backgroundColor = 'red'; // Setting Style Dynamically\n\n      style[':hover'] = {\n        backgroundColor: 'salmon',\n        color: 'black'\n      };\n    }\n\n    let dynamicClassname = ['purple ', 'bold'].join(' '); // Setting className Dynamically (purple-bold)\n\n    let classes = [];\n\n    if (this.state.person.length <= 2) {\n      classes.push('purple');\n    }\n\n    if (this.state.person.length <= 1) {\n      classes.push('stylefont');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"Day5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"  React JS\"), React.createElement(\"h4\", {\n      className: classes.join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Persons Data \"), React.createElement(\"p\", {\n      className: dynamicClassname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"React is Working\"), React.createElement(\"button\", {\n      style: style,\n      onClick: this.togglePersonHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Toggle\"), person);\n  }\n\n}\n\nexport default Radium(Day5);","map":{"version":3,"sources":["/home/madhavi/Documents/ReactJS/react-demo/src/Day5/Day5.js"],"names":["React","Component","Person","Radium","Day5","state","person","id","name","age","showPerson","deletePersonHandler","personIndex","splice","setState","nameChangeHandler","event","findIndex","p","persond","target","value","persons","togglePersonHandler","doesShow","render","style","backgroundColor","font","border","color","console","log","map","per","index","dynamicClassname","join","classes","length","push"],"mappings":"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","sourcesContent":["// Section 5\n// Setting Styles Dynamically Line no.123\n// Setting ClassName Dynamically \n\nimport React ,{Component} from 'react'\nimport Person from '../Person';\nimport '../App.css';\nimport Radium from 'radium';\n\nclass Day5 extends React.Component {\n\n\n    state = {\n      person :[\n        {id : '123edf', name : \"madhvi kokil\",age : 10},\n        {id : 'poi890', name : \"vaishnavi jawanjal\",age : 11},\n        {id : 'po4ftg ',name : \"bhagyashree porwal\",age : 11},\n        {id : 'seft65',name : \"sonal lamkane\",age : 10},\n      ],\n      // new key added\n      showPerson : false\n    }\n\n    // for lists and state\n\n    // switchData =(newData) =>{\n    //   this.setState({\n    //     person :[\n    //       {name : \"madhvi\",age : 22},\n    //       {name : \"vaishnavi\",age : 21},\n    //       {name : 'bhagyashree',age : 21},\n    //       {name : \"sonal\",age : 21},\n\n    //     ]\n    //   })\n    // }\n\n    deletePersonHandler =(personIndex) => {\n        const person = this.state.person;       // mutable way\n       // const person = [...this.state.person];            immutable way\n        person.splice(personIndex,1);\n        this.setState({person :person})\n    }\n\n    nameChangeHandler = (event,id) =>{\n\n        const personIndex = this.state.person.findIndex(p => {\n            return p.id === id;\n        });\n\n        const person = {\n            ...this.state.persond[personIndex]\n        };\n\n        person.name = event.target.value;\n        const persons = [...this.state.person];\n        persons[personIndex] = person;\n        \n\n\n                this.setState({persons : persons})  \n    } \n             \n\n    togglePersonHandler =() =>{\n        const doesShow = this.state.showPerson;\n        this.setState({showPerson: !doesShow});\n    }\n\n  render(){\n\n    const style ={\n        backgroundColor: 'green',\n        font : 'inherit',\n        border: ' 2px solid blue',\n        ':hover':{\n            backgroundColor : 'lightgreen',\n            color:'yellow'\n        }\n     \n    };\n\n    // Rendering Content Conditionally\n\n    // return (\n    //    <div className=\"Day4\">\n    //      <h1> React JS</h1>\n         \n    //      <button \n    //         style = {style}\n    //      onClick={this.togglePersonHandler}>Toggle</button>\n    //     {/* ternary operator is used to check whether the showPerson is true or false and according to that it will work and onClick it calls the togglePersonHandler*/}\n    //     { this.state.showPerson ? \n    //     <div>\n    //      <Person name={this.state.person[0].name} age={this.state.person[0].age} changed={this.nameChangeHandler}> </Person>\n    //      <Person name={this.state.person[1].name} age={this.state.person[1].age} click={this.switchData.bind(this,\"bhagyaa\")}>  </Person> \n    //      <Person name={this.state.person[2].name} age={this.state.person[2].age} >Hello guys!!! </Person>\n    //      <Person name={this.state.person[3].name} age={this.state.person[3].age}> </Person>\n    //      </div> : null \n    //      }\n         \n    //    </div>\n    // )}\n\n\n    // Handling Dynamic Content \"The JavaScript Way\"\n  \n    let person ;\n\n    if(this.state.showPerson ) {\n        console.log(this.state.showPerson)\n        // another method to list down elements\n        person = (\n            <div>\n                {this.state.person.map((per,index) => {\n                    return <Person\n                    click ={() => this.deletePersonHandler(index)}\n                    name = {per.name}\n                    age = {per.age} \n                    key = {per.id}\n                    changes ={(event) =>this.nameChangeHandler(event,per.id)}/>\n                })}\n         {/* <Person name={this.state.person[0].name} age={this.state.person[0].age} changed={this.nameChangeHandler}> </Person>\n         <Person name={this.state.person[1].name} age={this.state.person[1].age} click={this.switchData.bind(this,\"bhagyaa\")}>  </Person> \n         <Person name={this.state.person[2].name} age={this.state.person[2].age} >Hello guys!!! </Person>\n         <Person name={this.state.person[3].name} age={this.state.person[3].age}> </Person> */}\n            </div>\n        \n\n        );\n        style.backgroundColor = 'red';      // Setting Style Dynamically\n         style[':hover']= {\n             backgroundColor :'salmon',\n             color:'black'\n         }\n    }\n\n    let dynamicClassname = ['purple ' ,'bold'].join(' ');   // Setting className Dynamically (purple-bold)\n\n    let classes = [];\n    if(this.state.person.length <=2){\n        classes.push('purple');\n    }\n\n    if(this.state.person.length <=1){\n        classes.push('stylefont');\n    }\n\n      return (\n       <div className=\"Day5\">\n         <h1 >  React JS</h1>\n         <h4 className={classes.join(' ')} >Persons Data </h4>\n         <p className={dynamicClassname}>React is Working</p>\n         \n         <button \n            style = {style}\n         onClick={this.togglePersonHandler}>Toggle</button>\n        {/* ternary operator is used to check whether the showPerson is true or false and according to that it will work and onClick it calls the togglePersonHandler*/}\n       {person}\n       \n       \n       </div>\n    )}\n      }\n\n  \nexport default Radium(Day5);"]},"metadata":{},"sourceType":"module"}