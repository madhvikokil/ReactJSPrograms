{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/ReactJS/react-demo/src/Day4/Day4.js\";\n// Section 4\n// Rendering Content Conditionally\nimport React, { Component } from 'react';\nimport Person from '../Person';\n\nclass Day4 extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.switchData = newData => {\n      this.setState({\n        person: [{\n          name: \"madhvi\",\n          age: 22\n        }, {\n          name: \"vaishnavi\",\n          age: 21\n        }, {\n          name: 'bhagyashree',\n          age: 21\n        }, {\n          name: \"sonal\",\n          age: 21\n        }]\n      });\n    };\n\n    this.nameChangeHandler = event => {\n      this.setState({\n        person: [{\n          name: event.target.value,\n          age: 28\n        }, {\n          name: 'vaishnavi',\n          age: 21\n        }, {\n          name: 'bhagyashree',\n          age: 21\n        }, {\n          name: \"sonal\",\n          age: 21\n        }]\n      });\n    };\n\n    this.togglePersonHandler = () => {\n      const doesShow = this.state.showPerson;\n      this.setState({\n        showPerson: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'green',\n      font: 'inherit',\n      border: ' 2px solid blue'\n    }; // Rendering Content Conditionally\n    // return (\n    //    <div className=\"Day4\">\n    //      <h1> React JS</h1>\n    //      <button \n    //         style = {style}\n    //      onClick={this.togglePersonHandler}>Toggle</button>\n    //     {/* ternary operator is used to check whether the showPerson is true or false and according to that it will work and onClick it calls the togglePersonHandler*/}\n    //     { this.state.showPerson ? \n    //     <div>\n    //      <Person name={this.state.person[0].name} age={this.state.person[0].age} changed={this.nameChangeHandler}> </Person>\n    //      <Person name={this.state.person[1].name} age={this.state.person[1].age} click={this.switchData.bind(this,\"bhagyaa\")}>  </Person> \n    //      <Person name={this.state.person[2].name} age={this.state.person[2].age} >Hello guys!!! </Person>\n    //      <Person name={this.state.person[3].name} age={this.state.person[3].age}> </Person>\n    //      </div> : null \n    //      }\n    //    </div>\n    // )}\n    // Handling Dynamic Content \"The JavaScript Way\"\n\n    let person;\n\n    if (this.state.showPerson) {\n      console.log(this.state.showPerson); // another method to list down elements\n\n      person = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.state.person.map(per => {\n        return React.createElement(Person, {\n          name: per.name,\n          age: per.age,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        });\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"Day4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \" React JS\"), React.createElement(\"button\", {\n      style: style,\n      onClick: this.togglePersonHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Toggle\"), person);\n  }\n\n}\n\nexport default Day4;","map":{"version":3,"sources":["/home/madhavi/Documents/ReactJS/react-demo/src/Day4/Day4.js"],"names":["React","Component","Person","Day4","switchData","newData","setState","person","name","age","nameChangeHandler","event","target","value","togglePersonHandler","doesShow","state","showPerson","render","style","backgroundColor","font","border","console","log","map","per"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAGA,MAAMC,IAAN,SAAmBH,KAAK,CAACC,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAe/BG,UAf+B,GAelBC,OAAD,IAAY;AACtB,WAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAE,CACN;AAACC,UAAAA,IAAI,EAAG,QAAR;AAAiBC,UAAAA,GAAG,EAAG;AAAvB,SADM,EAEN;AAACD,UAAAA,IAAI,EAAG,WAAR;AAAoBC,UAAAA,GAAG,EAAG;AAA1B,SAFM,EAGN;AAACD,UAAAA,IAAI,EAAG,aAAR;AAAsBC,UAAAA,GAAG,EAAG;AAA5B,SAHM,EAIN;AAACD,UAAAA,IAAI,EAAG,OAAR;AAAgBC,UAAAA,GAAG,EAAG;AAAtB,SAJM;AADI,OAAd;AASD,KAzB8B;;AAAA,SA2B/BC,iBA3B+B,GA2BVC,KAAD,IAAU;AAC1B,WAAKL,QAAL,CAAc;AACVC,QAAAA,MAAM,EAAE,CACJ;AAACC,UAAAA,IAAI,EAAGG,KAAK,CAACC,MAAN,CAAaC,KAArB;AAA2BJ,UAAAA,GAAG,EAAC;AAA/B,SADI,EAEJ;AAACD,UAAAA,IAAI,EAAG,WAAR;AAAqBC,UAAAA,GAAG,EAAC;AAAzB,SAFI,EAGJ;AAACD,UAAAA,IAAI,EAAG,aAAR;AAAsBC,UAAAA,GAAG,EAAG;AAA5B,SAHI,EAIJ;AAACD,UAAAA,IAAI,EAAG,OAAR;AAAgBC,UAAAA,GAAG,EAAG;AAAtB,SAJI;AADE,OAAd;AASH,KArC8B;;AAAA,SAuC/BK,mBAvC+B,GAuCV,MAAK;AACtB,YAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,UAA5B;AACA,WAAKX,QAAL,CAAc;AAACW,QAAAA,UAAU,EAAE,CAACF;AAAd,OAAd;AACH,KA1C8B;AAAA;;AA4CjCG,EAAAA,MAAM,GAAE;AAEN,UAAMC,KAAK,GAAE;AACTC,MAAAA,eAAe,EAAE,OADR;AAETC,MAAAA,IAAI,EAAG,SAFE;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb,CAFM,CASN;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;;AAEA,QAAIf,MAAJ;;AAEA,QAAG,KAAKS,KAAL,CAAWC,UAAd,EAA2B;AACvBM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,UAAvB,EADuB,CAEvB;;AACAV,MAAAA,MAAM,GACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKS,KAAL,CAAWT,MAAX,CAAkBkB,GAAlB,CAAsBC,GAAG,IAAI;AAC1B,eAAO,oBAAC,MAAD;AACP,UAAA,IAAI,EAAIA,GAAG,CAAClB,IADL;AAEP,UAAA,GAAG,EAAIkB,GAAG,CAACjB,GAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,OAJA,CADL,CADJ;AAeH;;AAEC,WACC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAGE;AACG,MAAA,KAAK,EAAIU,KADZ;AAEA,MAAA,OAAO,EAAE,KAAKL,mBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAOCP,MAPD,CADD;AAYA;;AAhH6B;;AAmHnC,eAAeJ,IAAf","sourcesContent":["// Section 4\n// Rendering Content Conditionally\n\nimport React ,{Component} from 'react'\nimport Person from '../Person';\n\n\nclass Day4 extends React.Component {\n\n    // for lists and state (comment it)\n\n    // state = {\n    //   person :[\n    //     {name : \"madhvi kokil\",age : 10},\n    //     {name : \"vaishnavi jawanjal\",age : 11},\n    //     {name : \"bhagyashree porwal\",age : 11},\n    //     {name : \"sonal lamkane\",age : 10},\n    //   ],\n    //   // new key added\n    //   showPerson : false\n    // }\n\n    switchData =(newData) =>{\n      this.setState({\n        person :[\n          {name : \"madhvi\",age : 22},\n          {name : \"vaishnavi\",age : 21},\n          {name : 'bhagyashree',age : 21},\n          {name : \"sonal\",age : 21},\n\n        ]\n      })\n    }\n\n    nameChangeHandler = (event) =>{\n        this.setState({\n            person :[\n                {name : event.target.value,age:28},\n                {name : 'vaishnavi' ,age:21},\n                {name : 'bhagyashree',age : 21},\n                {name : \"sonal\",age : 21},\n      \n            ]\n        })\n    }\n\n    togglePersonHandler =() =>{\n        const doesShow = this.state.showPerson;\n        this.setState({showPerson: !doesShow});\n    }\n\n  render(){\n\n    const style ={\n        backgroundColor: 'green',\n        font : 'inherit',\n        border: ' 2px solid blue',\n     \n    };\n\n    // Rendering Content Conditionally\n\n    // return (\n    //    <div className=\"Day4\">\n    //      <h1> React JS</h1>\n         \n    //      <button \n    //         style = {style}\n    //      onClick={this.togglePersonHandler}>Toggle</button>\n    //     {/* ternary operator is used to check whether the showPerson is true or false and according to that it will work and onClick it calls the togglePersonHandler*/}\n    //     { this.state.showPerson ? \n    //     <div>\n    //      <Person name={this.state.person[0].name} age={this.state.person[0].age} changed={this.nameChangeHandler}> </Person>\n    //      <Person name={this.state.person[1].name} age={this.state.person[1].age} click={this.switchData.bind(this,\"bhagyaa\")}>  </Person> \n    //      <Person name={this.state.person[2].name} age={this.state.person[2].age} >Hello guys!!! </Person>\n    //      <Person name={this.state.person[3].name} age={this.state.person[3].age}> </Person>\n    //      </div> : null \n    //      }\n         \n    //    </div>\n    // )}\n\n\n    // Handling Dynamic Content \"The JavaScript Way\"\n\n    let person ;\n\n    if(this.state.showPerson ) {\n        console.log(this.state.showPerson)\n        // another method to list down elements\n        person = (\n            <div>\n                {this.state.person.map(per => {\n                    return <Person\n                    name = {per.name}\n                    age = {per.age} />\n                })}\n\n         {/* <Person name={this.state.person[0].name} age={this.state.person[0].age} changed={this.nameChangeHandler}> </Person>\n         <Person name={this.state.person[1].name} age={this.state.person[1].age} click={this.switchData.bind(this,\"bhagyaa\")}>  </Person> \n         <Person name={this.state.person[2].name} age={this.state.person[2].age} >Hello guys!!! </Person>\n         <Person name={this.state.person[3].name} age={this.state.person[3].age}> </Person> */}\n            </div>\n\n        );\n    }\n\n      return (\n       <div className=\"Day4\">\n         <h1> React JS</h1>\n         \n         <button \n            style = {style}\n         onClick={this.togglePersonHandler}>Toggle</button>\n        {/* ternary operator is used to check whether the showPerson is true or false and according to that it will work and onClick it calls the togglePersonHandler*/}\n       {person}\n       \n       \n       </div>\n    )}\n}\n  \nexport default Day4;"]},"metadata":{},"sourceType":"module"}